# 精确匹配
= /demo
----------------------仅匹配，举例1
= /demo

= /demo/
----------------------仅匹配，举例2
= /demo/

= /demo$
----------------------仅匹配，举例3
= /demo$
# 前缀匹配
# 非正则且区分大小写，常用于匹配文件夹，如配置静态文件
^~ /demo
----------------------前缀匹配
http://192.168.33.10/demo
http://192.168.33.10/demo/
http://192.168.33.10/demo/aaa
http://192.168.33.10/demo/aaa/bbb
http://192.168.33.10/demo/AAA
http://192.168.33.10/demoaaa
http://192.168.33.10/demo.aaa
# 正则匹配
# ~ 表示使用正则，区分大小写
# ~* 表示使用正则，不区分大小写
~ /[0-9]emo
----------------------使用~匹配时，区分大小写
http://192.168.33.10/5emo
http://192.168.33.10/9emo
http://192.168.33.10/5emo/aaa
http://192.168.33.10/5emo/AAA
http://192.168.33.10/5emoaaa

~* /[0-9]EmO
----------------------使用~*匹配时，不区分大小写
http://192.168.33.10/5emo
http://192.168.33.10/9Emo
http://192.168.33.10/5emo/Aaa
http://192.168.33.10/5eMoEaaa
# 正常匹配的匹配指令为空
# 没有指定匹配指令时即为常规匹配，也称正常匹配
# 可以使用正则，但不区分大小写
/demo
----------------------常规匹配
http://192.168.33.10/demo
http://192.168.33.10/demo/
http://192.168.33.10/demo/aaa
http://192.168.33.10/demo/aaa/bbb
http://192.168.33.10/demo/AAA
http://192.168.33.10/demoaaa
http://192.168.33.10/demo.aaa
# 常规匹配和前缀匹配的差别在于优先级，前缀的优先级高于常规匹配
# 全匹配与常规匹配一样，同样也没有匹配指令，匹配的url模式仅一个斜杠/

# nginx的匹配优先级遵循一个大原则和两个小细节
----------------------优先级高--优先级低--
精确匹配--前缀匹配--正则匹配--正常匹配--全匹配
----------------------细节1
正则匹配成功之后停止匹配，非正则匹配成功还会接着匹配。
----------------------细节2
在所有匹配成功的url中，选取匹配度最大的url字符地址。


